name: Pipeline

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python environment
        uses: actions/setup-python@v2
        with:
          python-version: "3.11" 
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install --quiet --requirement requirements.txt
      - name: Lint code
        run: |
          flake8 --ignore=E501,E231 *.py
          pylint --disable=C0301 *.py
      - name: Run unit tests
        run: |
          python -m unittest discover --verbose --failfast

  build_image:
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env: 
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: python-web-app-cicd
          IMAGE_TAG: python_web_app_image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  test_image:
    needs: [build_image]
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials

      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Pull image from Amazon ECR
      env: 
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: python-web-app-cicd
        IMAGE_TAG: python_web_app_image
      run: |
          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      
    - name: Run unit tests on the image
      env: 
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: python-web-app-cicd
        IMAGE_TAG: python_web_app_image
      run: |
          docker run $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -m unittest discover --verbose --failfast
          
  # deploy:
  #   needs: [test_image]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1

  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v2

  #     - name: Deploy to Amazon ECR
  #       env: 
  #         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  #         ECR_REPOSITORY: python-web-app-cicd
  #         IMAGE_TAG: python-web-app-image
  #       run: |
  #         aws ecs update-service --cluster python-web-app-cicd --service python_web_app_image --force-new-deployment
